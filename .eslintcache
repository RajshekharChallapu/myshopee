[{"/Users/raja/Desktop/myshopee/src/index.js":"1","/Users/raja/Desktop/myshopee/src/App.jsx":"2","/Users/raja/Desktop/myshopee/src/serviceWorker.js":"3","/Users/raja/Desktop/myshopee/src/header/Navbar.jsx":"4","/Users/raja/Desktop/myshopee/src/router/Route.jsx":"5","/Users/raja/Desktop/myshopee/src/components/home/Home.jsx":"6","/Users/raja/Desktop/myshopee/src/components/orderStatus/OrderDetails.jsx":"7","/Users/raja/Desktop/myshopee/src/components/orderStatus/OrderStatus.jsx":"8","/Users/raja/Desktop/myshopee/src/components/orderStatus/Order.jsx":"9","/Users/raja/Desktop/myshopee/src/components/common/ShippingInfo.jsx":"10","/Users/raja/Desktop/myshopee/src/utils/Utils.js":"11"},{"size":767,"mtime":1612471841791,"results":"12","hashOfConfig":"13"},{"size":268,"mtime":1612471841783,"results":"14","hashOfConfig":"13"},{"size":5141,"mtime":1612471841793,"results":"15","hashOfConfig":"13"},{"size":1658,"mtime":1612471841790,"results":"16","hashOfConfig":"13"},{"size":1039,"mtime":1612471841792,"results":"17","hashOfConfig":"13"},{"size":226,"mtime":1612471841787,"results":"18","hashOfConfig":"13"},{"size":4223,"mtime":1612471841788,"results":"19","hashOfConfig":"13"},{"size":595,"mtime":1612471841789,"results":"20","hashOfConfig":"13"},{"size":1643,"mtime":1612471841788,"results":"21","hashOfConfig":"13"},{"size":1103,"mtime":1612471841786,"results":"22","hashOfConfig":"13"},{"size":1467,"mtime":1612471841794,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1u1n82x",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/raja/Desktop/myshopee/src/index.js",[],["52","53"],"/Users/raja/Desktop/myshopee/src/App.jsx",[],"/Users/raja/Desktop/myshopee/src/serviceWorker.js",[],"/Users/raja/Desktop/myshopee/src/header/Navbar.jsx",["54","55","56","57","58","59","60"],"import React from 'react';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n      \r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" >Products</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" >Brands</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" >Deals</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" >Services</a>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav pull-right\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" >Account</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" >Recently Viewed</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#/orderstatus\">Order Status</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link dropdown-toggle\" >Saved Items</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","/Users/raja/Desktop/myshopee/src/router/Route.jsx",[],"/Users/raja/Desktop/myshopee/src/components/home/Home.jsx",[],"/Users/raja/Desktop/myshopee/src/components/orderStatus/OrderDetails.jsx",["61","62","63","64","65","66"],"import React, { useState, useEffect } from 'react';\r\nimport { getShippingDateRange, maskNumber, getFormattedDate } from '../../utils/Utils.js';\r\nimport ShippingInfo from '../common/ShippingInfo.jsx';\r\n\r\nexport default function OrderDetails(props) {\r\n\r\n  const {orderId} = props.match.params;\r\n  const [orderDetails, setOrderDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  },[orderId]);\r\n\r\n\r\n  function getOrders(){\r\n    fetch(\"/mockdata/orderDetails\"+orderId+\".json\")\r\n      .then(response => response.json())\r\n      .then(data => setOrderDetails(data));\r\n  }\r\n\r\n\r\n  if(!orderDetails) return \"\";\r\n\r\n  const statusOrdered = orderDetails.status == \"ordered\";\r\n  const isConfirmationRequired = statusOrdered && !orderDetails.items[0].userAcceptedDelay;\r\n  const statusShipped = orderDetails.status == \"shipped\";\r\n\r\n  return (\r\n    <div className=\"card container order-details\">\r\n\r\n      {isConfirmationRequired && <div className=\"heads-up notification\">\r\n        <h5>Heads up: The shipping date chaged.</h5>\r\n        <span className=\"faded-text\">Before we can complete your order, review the newdate to confirm if you're OK with it.</span>\r\n      </div>}\r\n\r\n      {(statusShipped || !isConfirmationRequired) && <div className=\"success notification\">\r\n        <h5>Get Excited</h5>\r\n        <span className=\"faded-text\">Fun stuff is headed your way.</span>\r\n      </div>}\r\n\r\n      <ShippingInfo orderDetails={orderDetails} showLabel={true} />\r\n\r\n      <h4>Items {statusOrdered && 'ordered'}{statusShipped && 'shipped'}: {orderDetails.shipments[0].items.length}</h4>\r\n    \r\n      {isConfirmationRequired && \r\n        <div className=\"alert\">\r\n          <div className=\"alert-text faded-text\">\r\n            <img src=\"/graphics/alert.svg\" />\r\n            Don't forget to let us know if you accept the new ship date. We'll cancel your order if we don't hear from you soon.\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      {isConfirmationRequired && \r\n        <div className=\"shipping-dates\">\r\n          <h4>New estimated ship date:</h4>\r\n          <span className=\"faded-text\">{getShippingDateRange(orderDetails.items[0].newEstimatedShipDateRange,true)}</span>\r\n          <div className=\"original-shipment\">\r\n            <span className=\"faded-text\">Original estimated ship date:</span> <br />\r\n            <span className=\"faded-text\">{getShippingDateRange(orderDetails.items[0].estimatedShipDateRange,true)}</span>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      {statusShipped && \r\n        <div className=\"carrier-info\">\r\n          <h4>{orderDetails.shipments[0].carrier} tracking</h4>\r\n          <a href={orderDetails.shipments[0].trackingUrl} target=\"_blank\" >{maskNumber(orderDetails.shipments[0].trackingNumber)}</a>\r\n        </div>\r\n      }\r\n      \r\n      {statusShipped && \r\n        <div className=\"delivery-info\">\r\n          <h4 className=\"d-inline-block\">Estimated delivery date:</h4>\r\n          <span className='faded-text'>{getFormattedDate(orderDetails.shipments[0].estimatedDeliveryDate)}</span>\r\n          \r\n        </div>\r\n      }\r\n\r\n      <div className=\"address-info\">\r\n        <h4 className=\"d-inline-block\">Address:</h4>\r\n        <div className=\"faded-text d-inline-block\">\r\n          {`${orderDetails.shipingAddress.street} ${orderDetails.shipingAddress.city}, ${orderDetails.shipingAddress.state} ${orderDetails.shipingAddress.zip}`}\r\n        </div>\r\n      </div>\r\n\r\n      {isConfirmationRequired && \r\n        <div className=\"action-buttons\">\r\n          <button className=\"btn btn-md btn-primary\">Accept new ship date</button>\r\n          <button className=\"btn btn-md btn-custom\">Cancel your order</button>\r\n        </div>\r\n      }\r\n\r\n      {orderDetails.items.map((item) =>\r\n        <div className=\"items-info order\">\r\n          <img \r\n            src={item.image}\r\n            className=\"order-image\" alt=\"Order image\" />\r\n          <div className=\"info\">\r\n            <h3>{item.name} - {item.skuAttributes.size}<br/>{item.skuAttributes.color}</h3>\r\n            <span className=\"faded-text\">Quantity: {item.quantity}</span> <br />\r\n            <span className=\"faded-text d-block mt-2\">{item.telephoneNumber}</span>\r\n          </div>\r\n      </div>)}\r\n\r\n    </div>      \r\n  );\r\n}","/Users/raja/Desktop/myshopee/src/components/orderStatus/OrderStatus.jsx",[],"/Users/raja/Desktop/myshopee/src/components/orderStatus/Order.jsx",["67","68","69"],"import React from 'react';\r\nimport { formatTelephoneNumber, getShippingDateRange, getFormattedDate } from '../../utils/Utils.js';\r\nimport ShippingInfo from '../common/ShippingInfo.jsx';\r\n\r\nexport default function Order (props){\r\n\r\n  function redirectToDetailsPage (id) {\r\n   props.routeProps.history.push(\"/orderdetails/\"+id);\r\n  }\r\n\r\n  const { data } = props;\r\n\r\n  return (\r\n      <div className=\"order card\">\r\n        <img \r\n          src={data.items[0].image}\r\n          onClick={()=>redirectToDetailsPage(data.id)}\r\n          className=\"order-image\" alt=\"Order image\" />\r\n        <div className=\"info\">\r\n          \r\n          <ShippingInfo orderDetails={data} showLabel={false} />\r\n\r\n          <div className=\"product-info\">\r\n            {data.status == \"ordered\" && <span className=\"ship-info faded-text\">\r\n              Expected to Ship: {getShippingDateRange(data.items[0].newEstimatedShipDateRange)}\r\n            </span>}\r\n            {data.status == \"shipped\" && <span className=\"ship-info faded-text\">\r\n              Expected to Deliver: {getFormattedDate(data.shipments[0].estimatedDeliveryDate)}\r\n            </span>}\r\n            <br/>\r\n            <span className=\"product-name\">\r\n              {data.items[0].name}\r\n            </span>\r\n            <br />\r\n            <span className=\"product-details faded-text\">\r\n              {data.items[0].skuAttributes.color} {data.items[0].skuAttributes.size}\r\n              <br />\r\n              {formatTelephoneNumber(data.items[0].telephoneNumber)}\r\n              <br />\r\n              {data.items[0].plan}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}","/Users/raja/Desktop/myshopee/src/components/common/ShippingInfo.jsx",["70","71","72","73","74","75"],"import React from 'react';\r\n\r\nexport default function ShippingInfo (props) {\r\n  const { orderDetails, showLabel } = props;\r\n  const statusOrdered = orderDetails.status == \"ordered\";\r\n  const statusShipped = orderDetails.status == \"shipped\";\r\n\r\n  return (\r\n    <div className=\"shipping-info\">\r\n      <div className={`ordered ${(statusOrdered || statusShipped)? \"active\": \"\"}`} >\r\n        <img src=\"/graphics/Ordered.png\"\r\n          className=\"ordered-image\" />\r\n        <hr/>\r\n        {showLabel && <span className=\"faded-text\">Ordered</span>}\r\n      </div>\r\n      <div className={`shipped ${statusShipped ? \"active\": \"\"}`} >\r\n        <img src=\"/graphics/Shipped.png\"\r\n          className=\"shipped-image\" />\r\n        <hr />\r\n        {showLabel && <span className=\"faded-text\">Shipped</span>}\r\n      </div>\r\n      <div className={`delivered ${orderDetails.status == \"delivered\"? \"active\": \"\"}`} >\r\n        <img src=\"/graphics/Delivered.png\"\r\n          className=\"delivered-image\" />\r\n        <hr />\r\n        {showLabel && <span className=\"faded-text\">Delivered</span>}\r\n      </div>\r\n    </div>  \r\n  );\r\n}","/Users/raja/Desktop/myshopee/src/utils/Utils.js",["76","77"],"export function formatTelephoneNumber(val){\r\n  return val.replace(/\\./g,' ');\r\n}\r\n\r\nexport function getShippingDateRange(dates, withDays){\r\n  const fromDate = formatDates(dates.fromDate);\r\n  const toDate = formatDates(dates.toDate);\r\n\r\n  if(withDays){\r\n    if(fromDate.year == toDate.year){\r\n      return `${fromDate.day}., ${fromDate.month}. ${fromDate.date} - ${toDate.day}., ${toDate.month}. ${toDate.date}, ${toDate.year}`;\r\n    }else{\r\n      return `${fromDate.day}., ${fromDate.month}. ${fromDate.date}, ${fromDate.year} - ${toDate.day}., ${toDate.month}. ${toDate.date}, ${toDate.year}`;\r\n    }\r\n  }\r\n\r\n  if(fromDate.year == toDate.year){\r\n    return `${fromDate.month}. ${fromDate.date}-${toDate.month}. ${toDate.date}, ${toDate.year}`;\r\n  }else{\r\n    return `${fromDate.month}. ${fromDate.date}, ${fromDate.year}-${toDate.month}. ${toDate.date}, ${toDate.year}`;\r\n  }\r\n}\r\n\r\nexport function getFormattedDate(date){\r\n  const formattedDate = formatDates(date);\r\n  return `${formattedDate.day}., ${formattedDate.month}. ${formattedDate.date}, ${formattedDate.year}`;\r\n}\r\n\r\nexport function formatDates(val){\r\n  let date = new Date(val);\r\n  date = date.toString();\r\n  date = date.split(\" \");\r\n  return {\r\n    date: date[2],\r\n    month: date[1],\r\n    year: date[3],\r\n    day: date[0]\r\n  }\r\n}\r\n\r\nexport function maskNumber(val){\r\n  const length = val.length;\r\n  let maskedVal = \"\";\r\n  for(let i = 0; i<length;i++){\r\n    maskedVal += 'X';\r\n  }\r\n  return maskedVal;\r\n}",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":14,"column":13,"nodeType":"84","endLine":14,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":17,"column":13,"nodeType":"84","endLine":17,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":20,"column":13,"nodeType":"84","endLine":20,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":23,"column":13,"nodeType":"84","endLine":23,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":28,"column":13,"nodeType":"84","endLine":28,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":31,"column":13,"nodeType":"84","endLine":31,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":37,"column":13,"nodeType":"84","endLine":37,"endColumn":54},{"ruleId":"85","severity":1,"message":"86","line":12,"column":5,"nodeType":"87","endLine":12,"endColumn":14,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":24,"column":45,"nodeType":"91","messageId":"92","endLine":24,"endColumn":47},{"ruleId":"89","severity":1,"message":"90","line":26,"column":45,"nodeType":"91","messageId":"92","endLine":26,"endColumn":47},{"ruleId":"93","severity":1,"message":"94","line":48,"column":13,"nodeType":"84","endLine":48,"endColumn":46},{"ruleId":"95","severity":1,"message":"96","line":68,"column":11,"nodeType":"84","endLine":68,"endColumn":76},{"ruleId":"97","severity":1,"message":"98","line":96,"column":11,"nodeType":"84","endLine":98,"endColumn":57},{"ruleId":"97","severity":1,"message":"98","line":15,"column":9,"nodeType":"84","endLine":18,"endColumn":55},{"ruleId":"89","severity":1,"message":"90","line":24,"column":26,"nodeType":"91","messageId":"92","endLine":24,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":27,"column":26,"nodeType":"91","messageId":"92","endLine":27,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":5,"column":45,"nodeType":"91","messageId":"92","endLine":5,"endColumn":47},{"ruleId":"89","severity":1,"message":"90","line":6,"column":45,"nodeType":"91","messageId":"92","endLine":6,"endColumn":47},{"ruleId":"93","severity":1,"message":"94","line":11,"column":9,"nodeType":"84","endLine":12,"endColumn":39},{"ruleId":"93","severity":1,"message":"94","line":17,"column":9,"nodeType":"84","endLine":18,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":22,"column":56,"nodeType":"91","messageId":"92","endLine":22,"endColumn":58},{"ruleId":"93","severity":1,"message":"94","line":23,"column":9,"nodeType":"84","endLine":24,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":10,"column":22,"nodeType":"91","messageId":"92","endLine":10,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":17,"column":20,"nodeType":"91","messageId":"92","endLine":17,"endColumn":22},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.","ArrayExpression",["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [getOrders, orderId]",{"range":"104","text":"105"},[397,406],"[getOrders, orderId]"]